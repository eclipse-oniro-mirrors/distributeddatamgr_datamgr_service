# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################hydra-fuzz########################################
import("//build/config/features.gni")
import("//build/test.gni")
import("//foundation/distributeddatamgr/datamgr_service/datamgr_service.gni")

##############################fuzztest##########################################
ohos_fuzztest("ObjectServiceStubFuzzTest") {
  module_out_path = "datamgr_service/datamgr_service"

  include_dirs = [
    "${data_service_path}/adapter/include",
    "${data_service_path}/app/src",
    "${data_service_path}/framework/include",
    "${data_service_path}/service/backup/include",
    "${data_service_path}/service/bootstrap/include",
    "${data_service_path}/service/common",
    "${data_service_path}/service/config/include",
    "${data_service_path}/service/crypto/include",
    "${data_service_path}/service/object",
    "${data_service_path}/service/matrix/include",
    "${data_service_path}/service/waterversion",
    "${kv_store_common_path}",
    "${kv_store_path}/frameworks/innerkitsimpl/distributeddatafwk/include",
    "${kv_store_path}/frameworks/innerkitsimpl/distributeddatasvc/include",
    "${kv_store_path}/frameworks/innerkitsimpl/kvdb/include",
    "${kv_store_distributeddb_path}",
    "${kv_store_distributeddb_path}/include/",
    "${kv_store_distributeddb_path}/interfaces/include/",
    "${kv_store_distributeddb_path}/interfaces/include/relational",
    "${dataobject_path}/frameworks/innerkitsimpl/include",
    "${dataobject_path}/interfaces/innerkits",
    "//third_party/json/single_include",
    "${relational_store_path}/interfaces/inner_api/common_type/include",
  ]

  fuzz_config_file =
      "${data_service_path}/service/test/fuzztest/objectservicestub_fuzzer"

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "${data_service_path}/service/backup/src/backup_manager.cpp",
    "${data_service_path}/service/bootstrap/src/bootstrap.cpp",
    "${data_service_path}/service/common/common_types_utils.cpp",
    "${data_service_path}/service/common/value_proxy.cpp",
    "${data_service_path}/service/config/src/config_factory.cpp",
    "${data_service_path}/service/config/src/model/backup_config.cpp",
    "${data_service_path}/service/config/src/model/checker_config.cpp",
    "${data_service_path}/service/config/src/model/cloud_config.cpp",
    "${data_service_path}/service/config/src/model/component_config.cpp",
    "${data_service_path}/service/config/src/model/directory_config.cpp",
    "${data_service_path}/service/config/src/model/global_config.cpp",
    "${data_service_path}/service/config/src/model/network_config.cpp",
    "${data_service_path}/service/config/src/model/protocol_config.cpp",
    "${data_service_path}/service/crypto/src/crypto_manager.cpp",
    "${data_service_path}/service/object/object_asset_loader.cpp",
    "${data_service_path}/service/object/object_asset_machine.cpp",
    "${data_service_path}/service/object/object_callback_proxy.cpp",
    "${data_service_path}/service/object/object_data_listener.cpp",
    "${data_service_path}/service/object/object_manager.cpp",
    "${data_service_path}/service/object/object_service_impl.cpp",
    "${data_service_path}/service/object/object_service_stub.cpp",
    "${data_service_path}/service/object/object_snapshot.cpp",
    "${data_service_path}/service/object/object_types_utils.cpp",
    "${data_service_path}/service/waterversion/water_version_manager.cpp",
    "objectservicestub_fuzzer.cpp",
  ]

  deps = [
    "${data_service_path}/adapter:distributeddata_adapter",
    "${data_service_path}/adapter/utils:distributeddata_utils_static",
    "${data_service_path}/framework:distributeddatasvcfwk",
    "${kv_store_distributeddb_path}:distributeddb",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:dataobs_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "device_auth:deviceauth_sdk",
    "device_manager:devicemanagersdk",
    "dfs_service:cloudsync_asset_kit_inner",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "kv_store:distributeddata_mgr",
  ]
}

###############################################################################
group("fuzztest") {
  testonly = true

  deps = [ ":ObjectServiceStubFuzzTest" ]
}
###############################################################################
