# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################hydra-fuzz########################################
import("//build/config/features.gni")
import("//build/test.gni")
import("//foundation/distributeddatamgr/datamgr_service/datamgr_service.gni")

##############################fuzztest##########################################
ohos_fuzztest("CloudServiceStubFuzzTest") {
  module_out_path = "datamgr_service/datamgr_service"

  include_dirs = [
    "${data_service_path}/service/cloud",
    "${data_service_path}/service/common",
    "${data_service_path}/service/config/include",
    "${data_service_path}/service/crypto/include",
    "${data_service_path}/service/kvdb",
    "${data_service_path}/service/matrix/include",
    "${data_service_path}/service/network",
    "${data_service_path}/service/object",
    "${data_service_path}/service/permission/include",
    "${data_service_path}/service/rdb",
  ]

  fuzz_config_file = "${data_service_path}/service/test/fuzztest/cloudservicestub_fuzzer"

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "${data_service_path}/app/src/checker/bundle_checker.cpp",
    "${data_service_path}/app/src/checker/system_checker.cpp",
    "cloudservicestub_fuzzer.cpp",
  ]

  deps = [
    "${data_service_path}/adapter/account:distributeddata_account",
    "${data_service_path}/adapter/dfx:distributeddata_dfx",
    "${data_service_path}/adapter/network:distributeddata_network",
    "${data_service_path}/adapter/schema_helper:distributeddata_schema_helper",
    "${data_service_path}/adapter/utils:distributeddata_utils",
    "${data_service_path}/framework:distributeddatasvcfwk",
    "${data_service_path}/service/bootstrap:distributeddata_bootstrap",
    "${data_service_path}/service/cloud:distributeddata_cloud",
    "${data_service_path}/service/common:distributeddata_common",
    "${data_service_path}/service/rdb:distributeddata_rdb",
    "${kv_store_distributeddb_path}:distributeddb",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtoken_setproc",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "device_auth:deviceauth_sdk",
    "device_manager:devicemanagersdk",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:datamgr_common",
    "kv_store:distributeddata_inner",
    "kv_store:distributeddata_mgr",
    "relational_store:native_rdb",
    "resource_management:global_resmgr",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

###############################################################################
group("fuzztest") {
  testonly = true

  deps = [ ":CloudServiceStubFuzzTest" ]
}
###############################################################################
