# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//foundation/distributeddatamgr/datamgr_service/datamgr_service.gni")

group("build_module") {
  deps = [ ":distributeddatasvc" ]
}
config("module_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "backup/include",
    "bootstrap/include",
    "cloud",
    "common",
    "config/include",
    "crypto/include",
    "dumper/include",
    "kvdb",
    "matrix/include",
    "object",
    "permission/include",
    "rdb",
    "${data_service_path}/adapter/include",
    "${data_service_path}/app/src",
    "${data_service_path}/framework/include",
    "${kv_store_common_path}",
    "${kv_store_path}/frameworks/innerkitsimpl/distributeddatafwk/include",
    "${kv_store_path}/frameworks/innerkitsimpl/kvdb/include",
    "${kv_store_distributeddb_path}/include/",
    "${kv_store_distributeddb_path}/interfaces/include/",
    "${kv_store_distributeddb_path}/interfaces/include/relational",
  ]
  cflags = [ "-Wno-c99-designator" ]
}

ohos_shared_library("distributeddatasvc") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  cflags = [
    "-Werror",
    "-Wno-multichar",
    "-Wno-c99-designator",
    "-D_LIBCPP_HAS_COND_CLOCKWAIT",
    "-Oz",
    "-fdata-sections",
    "-ffunction-sections",
  ]

  ldflags = [ "-Wl,-z,relro,-z,now,--gc-sections" ]

  cflags_cc = [
    "-fvisibility=hidden",
    "-Oz",
  ]

  configs = [ ":module_public_config" ]
  public_configs = [ ":module_public_config" ]

  deps = [
    "${data_service_path}/adapter/account:distributeddata_account",
    "${data_service_path}/adapter/communicator:distributeddata_communicator",
    "${data_service_path}/adapter/utils:distributeddata_utils",
    "${data_service_path}/framework:distributeddatasvcfwk",
    "${data_service_path}/service/backup:distributeddata_backup",
    "${data_service_path}/service/bootstrap:distributeddata_bootstrap",
    "${data_service_path}/service/common:distributeddata_common",
    "${data_service_path}/service/config:distributeddata_config",
    "${data_service_path}/service/crypto:distributeddata_crypto",
    "${data_service_path}/service/dumper:distributeddata_dumper",
    "${data_service_path}/service/matrix:distributeddata_matrix",
    "${data_service_path}/service/permission:distributeddata_permit",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.theme_screenlock_mgr)) {
    deps +=
        [ "${data_service_path}/adapter/screenlock:distributeddata_screenlock" ]
  }

  if (datamgr_service_cloud) {
    deps += [ "${data_service_path}/service/cloud:distributeddata_cloud" ]
  }

  if (datamgr_service_kvdb) {
    deps += [ "${data_service_path}/service/kvdb:distributeddata_kvdb" ]
  }

  if (datamgr_service_udmf) {
    deps += [ "${data_service_path}/service/udmf:udmf_server" ]
  }

  if (datamgr_service_rdb) {
    deps += [ "${data_service_path}/service/rdb:distributeddata_rdb" ]
  }

  if (datamgr_service_data_share) {
    deps += [ "${data_service_path}/service/data_share:data_share_service" ]
  }

  if (datamgr_service_object) {
    deps += [ "${data_service_path}/service/object:distributeddata_object" ]
  }

  external_deps = [ "hilog:libhilog" ]
  subsystem_name = "distributeddatamgr"

  part_name = "datamgr_service"
  defines = [ "OPENSSL_SUPPRESS_DEPRECATED" ]
}
